"""
    –°–¥–µ–ª–∞—Ç—å –ë–î —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ AI –Ω–µ —Ä–∞–±–æ—á–∏–µ —É–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–¥ 0 —Ä–∞–±–æ—á–∏–µ –ø–æ–¥ 1 –∏ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é —Å –≤—ã–≤–æ–¥–æ–º —Ä–∞–±–æ—á–∏—Ö
"""

from os import getenv
from openai import OpenAI
# from random import randint
from dotenv import load_dotenv

load_dotenv()

client = OpenAI(
  base_url="https://openrouter.ai/api/v1",
  api_key=getenv("API_KEY_AI"),
)

# free_ai = [
#   "cognitivecomputations/dolphin3.0-mistral-24b:free", "cognitivecomputations/dolphin3.0-r1-mistral-24b:free",
#   "google/gemini-2.0-pro-exp-02-05:free", "google/gemini-2.0-flash-lite-preview-02-05:free",
#   "qwen/qwen2.5-vl-72b-instruct:free", "deepseek/deepseek-r1-distill-llama-70b:free",
#   "google/gemini-2.0-flash-lite-preview-02-05:free"
# ]

def request_to_ai(message_content):
  """
    models:
        1) cognitivecomputations/dolphin3.0-mistral-24b:free üö©
        2) cognitivecomputations/dolphin3.0-r1-mistral-24b:free ‚úÖ —à–æ —Ç–æ –Ω–µ —Ä–æ–±–∏—Ç –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ
        3) google/gemini-2.0-pro-exp-02-05:free
        4) google/gemini-2.0-flash-lite-preview-02-05:free
        5) deepseek/deepseek-r1-distill-llama-70b:free
        6) qwen/qwen2.5-vl-72b-instruct:free ‚úÖüö© <- –Ω–æ—Ä–º —Å–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
  """
  completion = client.chat.completions.create(
    model="qwen/qwen2.5-vl-72b-instruct:free", # free_ai[randint(0, len(free_ai))]
    messages=[
      {
        "role": "user",
        "content": f"{message_content}"
      }
    ]
  )

  return completion.choices[0].message.content


# print(request_to_ai("–ü—Ä–∏–µ–º –ü—Ä–∏–µ–º!"))